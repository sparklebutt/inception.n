ARG BASE_VERSION
#==alpine:3.20.6
# Use the official Alpine base image
FROM alpine:3.20.6
#${BASE_VERSION}

# Define build arguments
#ARG CRT_PATH
#ARG KEY_PATH
ARG SECURE_PORT
#ARG CRT
#ARG KEY
# Set environment variables test this to see if redunant
# ENV CRT_PATH=${CRT_PATH}
# ENV KEY_PATH=${KEY_PATH}

# Install Nginx and OpenSSL no cache ensurfes latest packages
# envsubst (via gettext) so i can use .env vars in conf files
RUN apk update && apk add --no-cache nginx openssl gettext 
RUN apk add --no-cache fcgi
RUN apk add --no-cache curl
# Add non-root user and set permissions if the user does not already exist
RUN id -u nginx &>/dev/null || adduser -D -g 'www' nginx && chown -R nginx:nginx /var/lib/nginx

RUN rm -rf /var/log/nginx /var/lib/nginx/logs && \
    mkdir -p /var/log/nginx /var/lib/nginx/logs && \
    touch /var/log/nginx/error.log /var/log/nginx/access.log && \
    touch /var/lib/nginx/logs/error.log && \
    chown -R nginx:nginx /var/log/nginx /var/lib/nginx && \
    chmod -R 755 /var/log/nginx /var/lib/nginx

# Copy entrypoint script to dynamically create the config
COPY tools/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Create directories for default SSL certificates 
RUN mkdir -p /run/nginx /etc/nginx/ssl && \
	touch /etc/nginx/nginx.conf.template && \
	chmod -R 755 /etc/ssl

RUN  openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout  /etc/nginx/ssl/selfsigned.key\
    -out /etc/nginx/ssl/selfsigned.crt \
    -subj "/C=FI/ST=Helsinki/L=Helsinki/O=42/OU=Hive/CN=${DOMAIN_NAME}"

RUN chmod 600 /etc/nginx/ssl/selfsigned.crt
RUN chmod 600 /etc/nginx/ssl/selfsigned.key
# Copy custom Nginx configuration template file
COPY conf/nginx.conf.template /etc/nginx/nginx.conf
RUN chmod +x /etc/nginx/nginx.conf

RUN echo 'fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;' >> /etc/nginx/fastcgi_params
# do i need for conf also?
# Expose port 443 for HTTPS
EXPOSE ${SECURE_PORT}

#CMD ["nginx", "-c", "/etc/nginx/nginx.conf", "-g", "daemon off;"]
# Use entrypoint script to run Nginx
ENTRYPOINT ["/entrypoint.sh"]
