
ARG BASE_VERSION
FROM $BASE_VERSION
#alpine:3.20.6
#${BASE_VERSION}

ARG WORDPRESS_PORT
# Install required packages with specific versions if necessary
RUN apk update && apk add --no-cache \
    bash \
    curl \
    gettext \
    curl \
    php \
    php-fpm \
    php-mysqli \
    php-mbstring \
    php-json \
    php-gd \
    php-xml \
    php-zip \
    php-phar \
    mariadb-client

# Download WP CLI, dockerfile allows for strong version control
RUN wget -q https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -O /usr/local/bin/wp
chmod +x /usr/local/bin/wp

# Copy PHP-FPM configuration template
COPY php-fpm.conf.template /etc/php83/php-fpm.d/www.conf.template

# Set PHP memory limit
RUN echo "memory_limit = 256M" >> /etc/php83/php.ini
RUN echo "php_admin_value[max_execution_time] = 300"
RUN echo "php_admin_value[max_input_time] = 300"
RUN echo "cgi.force_redirect = 0" >> /etc/php83/php.ini


#RUN chown -R nginx:nginx /var/www/html

# Create necessary directories
RUN mkdir -p /run/php /var/lib/nginx
RUN mkdir -p /var/www/html
# Create nginx user
WORKDIR /var/www/html
RUN chown -R 775 /var/www/html

RUN addgroup -S nginx && adduser -S nginx -G nginx
RUN chown -R nginx:nginx /var/lib/nginx /var/www/html

# Install WP-CLI
#RUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && \
#    chmod +x wp-cli.phar && \
#    mv wp-cli.phar /usr/local/bin/wp

# Copy entrypoint script
COPY tools/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

EXPOSE $WORDPRESS_PORT
# Set entrypoint
ENTRYPOINT ["/entrypoint.sh"]
